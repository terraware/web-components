on: issue_comment

jobs:
  publish-rc:
    # This job only runs for pull request comments
    name: Publish RC PR comment
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - name: Debug echo
        run: echo "${{ github.event.comment.body }}"

      - uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Set Environment
        run: .github/scripts/set-environment.sh

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: |
          yarn install --network-timeout 100000
          git checkout -- package.json

      - name: linter
        run: yarn lint

      - name: unit tests
        run: yarn test

      - name: build
        run: yarn build-dist

      - name: license report
        run: yarn license-report-dist

      - name: Prune package.json
        run: |
          cd dist
          npm pkg delete scripts
          npm pkg delete devDependencies
          npm pkg delete eslintConfig
          npm pkg delete resolutions
          npm pkg delete browserslist
          pwd
          cat `pwd`/package.json

      - name: Git config
        run: |
          git config --global user.email "${{ secrets.GH_DEPLOY_EMAIL }}"
          git config --global user.name "${{ secrets.GH_DEPLOY_USER }}"

      - name: Apply version bump (rc)
        run: npm version prerelease --preid=rc -m "%s - ${{ github.event.pull_request.title }}"

      - name: Git push version bump
        run: git push origin ${{ steps.extract_branch.outputs.branch }} --follow-tags --force

      - name: compare artifact package version
        run: .github/scripts/compare-artifact-package-versions.sh

      - name: publish npm package
        if: env.UPDATE_NPM_PACKAGE == 'true'
        run: cd dist && npm publish --scope @terraware
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_AUTH_TOKEN }}
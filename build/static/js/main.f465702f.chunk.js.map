{"version":3,"sources":["components/Autocomplete.tsx","components/CancelButton.tsx","components/Checkbox.tsx","components/DatePicker.tsx","components/DialogCloseButton.tsx","components/Divisor.tsx","components/Dropdown.tsx","components/Note.tsx","components/RadioButton.tsx","components/SummaryBox.tsx","components/TextArea.tsx","components/TextField.tsx","components/table/sort.ts","components/table/TableCellRenderer.tsx","components/table/TableHeader.tsx","components/table/index.tsx"],"names":["Autocomplete","id","label","values","onChange","selected","onChangeHandler","event","value","options","getOptionLabel","option","onInputChange","inputValue","freeSolo","forcePopupIcon","renderInput","params","TextField","variant","size","useStyles","makeStyles","theme","createStyles","cancel","backgroundColor","palette","common","white","borderColor","neutral","borderWidth","CancelButton","onClick","classes","Chip","className","clickable","Checkbox","props","FormControlLabel","checked","disabled","control","color","root","margin","DatePicker","React","useEffect","moment","locale","window","navigator","language","date","isValid","toISOString","toString","KeyboardButtonProps","disableToolbar","inputVariant","format","localeData","longDateFormat","fullWidth","onKeyPress","maxDate","undefined","error","helperText","closeButton","position","right","spacing","top","DialogCloseButton","IconButton","aria-label","Divisor","mt","Box","Divider","light","formControl","width","Dropdown","FormControl","InputLabel","Select","labelId","_child","target","map","MenuItem","note","borderRadius","marginBottom","padding","Note","children","Typography","component","RadioButton","Radio","bold","fontWeight","typography","fontWeightBold","whiteSpace","summaryDefault","summaryAvailable","summaryZero","state","full","height","boxSizing","infoIcon","SummaryBox","title","icon","onIconClick","style","TextArea","type","multiline","rows","placeholder","adornedEnd","paddingRight","InputProps","endAdornment","inputProps","min","required","descendingComparator","a","b","orderBy","bValue","aValue","getComparator","order","sorting","stableSort","array","comparator","stabilizedThis","el","index","sort","CellRenderer","column","onRowClick","key","CellDateRenderer","CellNotesRenderer","CellBooleanRenderer","CellEditRenderer","CellTextRenderer","Date","toLocaleDateString","day","month","year","timeZone","TableCell","align","length","editIcon","marginLeft","Link","href","preventDefault","display","fontSize","dragIconStyles","headcell","background","columnsToHeadCells","columns","c","disablePadding","name","toUpperCase","EnhancedTableHead","onRequestSort","useState","headCells","setHeadCells","SortableHead","lockAxis","axis","onSortEnd","onReorderEnd","useDragHandle","TableRow","headCell","i","SortableCell","sortDirection","TableSortLabel","active","direction","property","DragHandle","SortableHandle","SortableContainer","TableHead","SortableElement","tableStyles","hover","cursor","table","borderCollapse","container","maxHeight","inactiveRow","EnhancedTable","_order","_orderBy","Renderer","TableCellRenderer","onSelect","DetailsRenderer","sortComparator","sortHandler","isInactive","isClickable","setOrder","setOrderBy","hasEditColumn","filter","TableContainer","Table","stickyHeader","aria-labelledby","newOrder","TableBody","row","Fragment","Boolean","e","stopPropagation"],"mappings":"48BAiBe,SAASA,EAAT,GAMS,IALtBC,EAKqB,EALrBA,GACAC,EAIqB,EAJrBA,MACAC,EAGqB,EAHrBA,OACAC,EAEqB,EAFrBA,SACAC,EACqB,EADrBA,SAEMC,EAAkB,SAACC,EAAyBC,GAC5CD,GAEAH,EAASH,EADPO,GAGW,KAKnB,OACE,cAAC,IAAD,CACEP,GAAIA,EACJQ,QAASN,EACTO,eAAgB,SAACC,GAAD,OAAaA,GAAkB,IAC/CP,SAAUE,EACVM,cAAeN,EACfO,WAAYR,EACZS,UAAU,EACVC,gBAAgB,EAChBC,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBf,MAAOA,EAAOiB,QAAQ,WAAWC,KAAK,c,+BCzC/DC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,OAAQ,CACNC,gBAAiBH,EAAMI,QAAQC,OAAOC,MACtCC,YAAaP,EAAMI,QAAQI,QAAQ,KACnCC,YAAa,QAUJ,SAASC,EAAT,GAA+D,IAAvCC,EAAsC,EAAtCA,QAAShC,EAA6B,EAA7BA,MACxCiC,EAAUd,IAChB,OACE,cAACe,EAAA,EAAD,CACEnC,GAAG,SACHoC,UAAWF,EAAQV,OACnBvB,MAAK,OAAEA,QAAF,IAAEA,IAAS,SAChBoC,WAAS,EACTJ,QAASA,EACTf,QAAQ,a,sBChBC,SAASoB,EAASC,GAA4B,IAAD,EAQ1D,OACE,cAACC,EAAA,EAAD,CACExC,GAAIuC,EAAMvC,GACVG,SAVa,SACfG,EACAmC,GAEAF,EAAMpC,SAASoC,EAAMvC,GAAIyC,IAOvBxC,MAAOsC,EAAMtC,MACbyC,SAAUH,EAAMG,SAChBC,QACE,cAAC,IAAD,CACE3C,GAAI,SAAWuC,EAAMvC,GACrB4C,MAAM,UACNH,QAAO,UAAEF,EAAMhC,aAAR,a,8BCvBXa,G,OAAYC,aAAW,kBAC3BE,YAAa,CACXsB,KAAM,CACJC,OAAQ,SAkBC,SAASC,EAAWR,GAA4B,IAAD,IACtDL,EAAUd,IAahB,OAJA4B,IAAMC,WAAU,WACdC,IAAOC,OAAO,CAACC,OAAOC,UAAUC,SAAU,SACzC,CAACF,OAAOC,UAAUC,WAGnB,cAAC,IAAD,CACEtD,GAAIuC,EAAMvC,GACVO,MAAK,UAAEgC,EAAMhC,aAAR,QAAiB,KACtBJ,SAhBiB,SAACoD,GAChBA,GAAQA,EAAKC,UACfjB,EAAMpC,SAASoC,EAAMvC,GAArB,OAAyBuD,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAME,eAE/BlB,EAAMpC,SAASoC,EAAMvC,GAArB,OAAyBuD,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMG,aAa/BzD,MAAOsC,EAAMtC,MACb0D,oBAAqB,CACnB,aAAcpB,EAAM,eAEtBqB,gBAAc,EACd1C,QAAQ,SACR2C,aAAa,WACbC,OAAQZ,IAAOa,aAAaC,eAAe,KAC3ClB,OAAO,SACP3B,KAAK,QACL8C,WAAW,EACX7B,UAAWF,EAAQW,KACnBqB,WAAY3B,EAAM2B,WAClBC,QAAO,UAAE5B,EAAM4B,eAAR,aAAmBC,EAC1BC,MAAO9B,EAAM8B,MACbC,WAAY/B,EAAM+B,WAClB5B,SAAUH,EAAMG,W,8BC1DhBtB,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXgD,YAAa,CACXC,SAAU,WACVC,MAAOnD,EAAMoD,QAAQ,GACrBC,IAAKrD,EAAMoD,QAAQ,GACnB9B,MAAOtB,EAAMI,QAAQI,QAAQ,WASpB,SAAS8C,EAAT,GAA6D,IAAhC3C,EAA+B,EAA/BA,QACpCC,EAAUd,IAChB,OACE,cAACyD,EAAA,EAAD,CACEC,aAAW,QACX1C,UAAWF,EAAQqC,YACnBtC,QAASA,EAHX,SAKE,cAAC,IAAD,M,sBCtBS,SAAS8C,EAAT,GAAkD,IAAD,IAA9BC,UAA8B,MAAzB,EAAyB,EAC9D,OACE,qCACE,cAACC,EAAA,EAAD,CAAKD,GAAIA,IACT,cAACE,EAAA,EAAD,CAASC,OAAK,IACd,cAACF,EAAA,EAAD,CAAKD,GAAIA,O,wCCOT5D,EAAYC,aAAW,kBAC3BE,YAAa,CACX6D,YAAa,CACXC,MAAO,aAUE,SAASC,EAAT,GAOS,IANtBtF,EAMqB,EANrBA,GACAC,EAKqB,EALrBA,MACAC,EAIqB,EAJrBA,OACAC,EAGqB,EAHrBA,SACAC,EAEqB,EAFrBA,SACAsC,EACqB,EADrBA,SAWMR,EAAUd,IAChB,OACE,eAACmE,EAAA,EAAD,CACErE,QAAQ,WACRkB,UAAWF,EAAQkD,YACnBjE,KAAK,QACLuB,SAAUA,EAJZ,UAME,cAAC8C,EAAA,EAAD,CAAYxF,GAAE,UAAKA,EAAL,mBAAd,SAAyCC,IACzC,cAACwF,EAAA,EAAD,CACEC,QAAO,UAAK1F,EAAL,mBACPA,GAAIA,EACJC,MAAOA,EACPE,SAtBY,SAChBG,EAIAqF,GAEAxF,EAASH,EAAIM,EAAMsF,OAAOrF,QAgBtBA,MAAOH,EALT,gBAOGF,QAPH,IAOGA,OAPH,EAOGA,EAAQ2F,KAAI,gBAAG5F,EAAH,EAAGA,MAAOM,EAAV,EAAUA,MAAV,OACX,cAACuF,EAAA,EAAD,CAAU9F,GAAIO,EAAmBA,MAAOA,EAAxC,SACGN,GADuBM,W,YC7D9Ba,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwE,KAAM,CACJC,aAAc,EACdvE,gBAAiBH,EAAMI,QAAQI,QAAQ,KACvCmE,aAAc3E,EAAMoD,QAAQ,GAC5BwB,QAAS5E,EAAMoD,QAAQ,SASd,SAASyB,EAAT,GAAiD,IAAjCC,EAAgC,EAAhCA,SACvBlE,EAAUd,IAEhB,OACE,cAAC6D,EAAA,EAAD,CAAK7C,UAAWF,EAAQ6D,KAAxB,SACE,cAACM,EAAA,EAAD,CAAYC,UAAU,IAAtB,SAA2BF,M,aCblB,SAASG,EAAYhE,GAA4B,IAAD,EAQ7D,OACE,cAACC,EAAA,EAAD,CACExC,GAAIuC,EAAMvC,GACVG,SAVa,SACfG,EACAmC,GAEAF,EAAMpC,SAASoC,EAAMvC,GAAIyC,IAOvBxC,MAAOsC,EAAMtC,MACb0C,QACE,cAAC6D,EAAA,EAAD,CACExG,GAAI,SAAWuC,EAAMvC,GACrB4C,MAAM,UACNH,QAAO,UAAEF,EAAMhC,aAAR,a,qBCvBXa,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkF,KAAM,CACJC,WAAYpF,EAAMqF,WAAWC,eAC7BC,WAAY,YAEdC,eAAgB,CACdtC,SAAU,WACVwB,aAAc,EACdvE,gBAAiBH,EAAMI,QAAQI,QAAQ,KACvCoE,QAAS5E,EAAMoD,QAAQ,IAEzBqC,iBAAkB,CAChBf,aAAc,EACdvE,gBAAiBH,EAAMI,QAAQI,QAAQ,KACvCoE,QAAS5E,EAAMoD,QAAQ,GACvB9B,MAAOtB,EAAMI,QAAQC,OAAOC,OAE9BoF,YAAa,CACXhB,aAAc,EACdvE,gBAAiBH,EAAMI,QAAQuF,MAAM,GACrCf,QAAS5E,EAAMoD,QAAQ,GACvB9B,MAAOtB,EAAMI,QAAQC,OAAOC,OAE9BsF,KAAM,CACJlB,aAAc,EACdvE,gBAAiBH,EAAMI,QAAQI,QAAQ,KACvCoE,QAAS5E,EAAMoD,QAAQ,GACvByC,OAAQ,OACRC,UAAW,cAEbC,SAAU,CACR7C,SAAU,WACVC,MAAOnD,EAAMoD,QAAQ,SAcZ,SAAS4C,EAAT,GAOS,IANtBC,EAMqB,EANrBA,MACAhH,EAKqB,EALrBA,MAKqB,IAJrBW,eAIqB,MAJX,UAIW,EAHrBlB,EAGqB,EAHrBA,GACAwH,EAEqB,EAFrBA,KACAC,EACqB,EADrBA,YAEMvF,EAAUd,IAEVsG,EACQ,YAAZxG,EACIgB,EAAQ4E,eACI,cAAZ5F,EACAgB,EAAQ6E,iBACI,SAAZ7F,EACAgB,EAAQgF,KACRhF,EAAQ8E,YAEd,OACE,eAAC/B,EAAA,EAAD,CAAK7C,UAAWsF,EAAO1H,GAAIA,EAA3B,UACGwH,GACC,cAAC3C,EAAA,EAAD,CAAYzC,UAAWF,EAAQmF,SAAUpF,QAASwF,EAAlD,SACE,cAAC,IAAD,MAGJ,cAACpB,EAAA,EAAD,CAAYC,UAAU,IAAtB,SAA2BiB,IAC3B,cAAClB,EAAA,EAAD,CAAYC,UAAU,IAAIpF,QAAQ,KAAKkB,UAAWF,EAAQuE,KAA1D,SACGlG,OC5EM,SAASoH,EAASpF,GAA4B,IAAD,EAO1D,OACE,cAAC,IAAD,CACEvC,GAAIuC,EAAMvC,GACVO,MAAK,UAAEgC,EAAMhC,aAAR,QAAiB,GACtBJ,SAVa,SACfG,GAEAiC,EAAMpC,SAASoC,EAAMvC,GAAIM,EAAMsF,OAAOrF,QAQpCqH,KAAMrF,EAAMqF,KACZ3H,MAAOsC,EAAMtC,MACb4H,WAAS,EACTC,KAAM,EACN5G,QAAQ,WACRC,KAAK,QACL8C,WAAW,EACX8D,YAAaxF,EAAMwF,cChBzB,IAAM3G,EAAYC,aAAW,kBAC3BE,YAAa,CACXyG,WAAY,CACVC,aAAc,QAqBL,SAAShH,EAAUsB,GAA4B,IAAD,EACrDL,EAAUd,IAQhB,OACE,cAAC,IAAD,CACEpB,GAAIuC,EAAMvC,GACVO,MAAK,UAAEgC,EAAMhC,aAAR,QAAiB,GACtBJ,SAVa,SACfG,GAEAiC,EAAMpC,SAASoC,EAAMvC,GAAIM,EAAMsF,OAAOrF,QAQpCqH,KAAMrF,EAAMqF,KACZ3H,MAAOsC,EAAMtC,MACbiB,QAAQ,WACRC,KAAK,QACL8C,WAAW,EACXvB,SAAUH,EAAMG,SAChBwB,WAAY3B,EAAM2B,WAClBgE,WAAY,CACVC,aAAc5F,EAAM4F,aACpBjG,QAAS,CACP8F,WAAY9F,EAAQ8F,YAEtBI,WAAY,CACVC,IAAK9F,EAAM8F,MAGfhE,MAAO9B,EAAM8B,MACbC,WAAY/B,EAAM+B,WAClBgE,SAAU/F,EAAM+F,W,gDC/Df,SAASC,GACdC,EACAC,EACAC,GACa,IAAD,IACNC,EAAM,UAAGF,EAAEC,UAAL,QAAiB,GACvBE,EAAM,UAAGJ,EAAEE,UAAL,QAAiB,GAC7B,OAAIC,EAASC,GACH,EAEND,EAASC,EACJ,EAEF,EAKF,SAASC,GACdC,EACAJ,EACAK,GAKA,MAAiB,SAAVD,EACH,SAACN,EAAGC,GAAJ,OAAUM,EAAQP,EAAGC,EAAGC,IACxB,SAACF,EAAGC,GAAJ,OAAWM,EAAQP,EAAGC,EAAGC,IAGxB,SAASM,GACdC,EACAC,GAEA,IAAMC,EAAiBF,EAAMpD,KAAI,SAACuD,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAOrD,OANAF,EAAeG,MAAK,SAACd,EAAGC,GACtB,IAAMK,EAAQI,EAAWV,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVK,EAAoBA,EACjBN,EAAE,GAAKC,EAAE,MAGXU,EAAetD,KAAI,SAACuD,GAAD,OAAQA,EAAG,M,gEC3BxB,SAASG,GACtBhH,GACc,IACNiH,EAAqCjH,EAArCiH,OAAQjJ,EAA6BgC,EAA7BhC,MAAOkJ,EAAsBlH,EAAtBkH,WAAYJ,EAAU9G,EAAV8G,MAC7BrJ,EAAE,aAASqJ,EAAT,YAAkBG,EAAOE,KACjC,MAAoB,SAAhBF,EAAO5B,MAAoC,kBAAVrH,GAAsBA,EAClD,cAACoJ,GAAD,CAAkB3J,GAAIA,EAAIO,MAAOA,IACf,UAAhBiJ,EAAO5B,MAAoBrH,GAA0B,kBAAVA,EAC7C,cAACqJ,GAAD,CAAmB5J,GAAIA,EAAIO,MAAOA,IAChB,YAAhBiJ,EAAO5B,KACT,cAACiC,GAAD,CAAqB7J,GAAIA,EAAIO,MAAOA,IAClB,SAAhBiJ,EAAO5B,KACT,cAACkC,GAAD,CAAkB9J,GAAIA,EAAIyJ,WAAYA,IAExC,cAACM,GAAD,CAAkB/J,GAAIA,EAAIO,MAAOA,IAGnC,SAASoJ,GAAT,GAMU,IALf3J,EAKc,EALdA,GACAO,EAIc,EAJdA,MAKMgD,EAAO,IAAIyG,KAAKzJ,GAAO0J,mBAAmB,QAAS,CACvDC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,SAAU,QAGZ,OACE,cAACC,GAAA,EAAD,CAAWtK,GAAIA,EAAIuK,MAAM,OAAzB,SACE,cAAClE,EAAA,EAAD,CAAYC,UAAU,IAAIpF,QAAQ,QAAlC,SACGqC,MAMF,SAASwG,GAAT,GAMU,IALf/J,EAKc,EALdA,GACAO,EAIc,EAJdA,MAKA,OACE,cAAC+J,GAAA,EAAD,CAAWtK,GAAIA,EAAIuK,MAAM,OAAzB,SACE,cAAClE,EAAA,EAAD,CAAYC,UAAU,IAAIpF,QAAQ,QAAlC,SACGX,MAMF,SAASsJ,GAAT,GAMU,IALf7J,EAKc,EALdA,GACAO,EAIc,EAJdA,MAKA,OACE,cAAC+J,GAAA,EAAD,CAAWtK,GAAIA,EAAIuK,MAAM,OAAzB,SACE,cAAClE,EAAA,EAAD,CAAYC,UAAU,IAAIpF,QAAQ,QAAlC,SACa,SAAVX,EAAmB,MAAQ,SAM7B,SAASqJ,GAAT,GAMU,IALf5J,EAKc,EALdA,GACAO,EAIc,EAJdA,MAKA,OACE,cAAC+J,GAAA,EAAD,CAAWtK,GAAIA,EAAIuK,MAAM,OAAzB,SACE,cAAClE,EAAA,EAAD,CAAYrG,GAAIA,EAAIsG,UAAU,IAAIpF,QAAQ,QAA1C,SACGX,GAASA,EAAMiK,OAAS,EAAI,cAAC,KAAD,IAAgB,OAMrD,IAAMpJ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkJ,SAAU,CACRC,WAAYpJ,EAAMoD,QAAQ,SAKzB,SAASoF,GAAT,GAMU,IALf9J,EAKc,EALdA,GACAyJ,EAIc,EAJdA,WAKMvH,EAAUd,KAChB,OACE,cAACkJ,GAAA,EAAD,CAAWtK,GAAIA,EAAIuK,MAAM,OAAzB,SACE,cAACI,GAAA,EAAD,CACE3K,GAAE,UAAKA,EAAL,WACF4K,KAAK,IACL3I,QAAS,SAAC3B,GACRA,EAAMuK,iBACNpB,GAAcA,KALlB,SAQE,eAACxE,EAAA,EAAD,CAAK6F,QAAQ,OAAb,UACE,cAACzE,EAAA,EAAD,CAAYC,UAAU,IAAIpF,QAAQ,QAAlC,kBAGA,cAAC,KAAD,CAAU6J,SAAS,QAAQ3I,UAAWF,EAAQuI,kB,qDCtHlDO,GAAiB3J,aAAW,SAACC,GAAD,MAAY,CAC5CuB,KAAM,CACJ6H,YAAa,GACb9H,MAAOtB,EAAMI,QAAQC,OAAOC,MAC5B,UAAW,CACTgB,MAAOtB,EAAMI,QAAQI,QAAQ,WAK7BV,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0J,SAAU,CACRC,WAAY5J,EAAMI,QAAQC,OAAOC,YAmBvC,SAASuJ,GAAmBC,GAC1B,OAAOA,EAAQvF,KAAI,SAACwF,GAAD,MAAQ,CACzBrL,GAAIqL,EAAE3B,IACN4B,gBAAgB,EAChBrL,MAAOoL,EAAEE,KAAKC,kBAIH,SAASC,GAAkBlJ,GACxC,IAAML,EAAUd,KACR0H,EAAkCvG,EAAlCuG,MAAOJ,EAA2BnG,EAA3BmG,QAASgD,EAAkBnJ,EAAlBmJ,cAF2C,EASjC1I,IAAM2I,SACtCR,GAAmB5I,EAAM6I,UAVwC,mBAS5DQ,EAT4D,KASjDC,EATiD,KAgBnE,OAJA7I,IAAMC,WAAU,WACd4I,EAAaV,GAAmB5I,EAAM6I,YACrC,CAAC7I,EAAM6I,UAGR,cAACU,GAAD,CACEC,SAAS,IACTC,KAAK,IACLC,UAAW1J,EAAM2J,aACjBC,eAAa,EAJf,SAME,cAACC,EAAA,EAAD,CAAUpM,GAAG,eAAb,SACG4L,EAAU/F,KAAI,SAACwG,EAAUC,GAAX,OACb,cAACC,GAAD,CACE7J,UAAWH,EAAM2J,aACjB7C,MAAOiD,EAEP/L,MACE,cAAC+J,GAAA,EAAD,CACEtK,GAAE,uBAAkBqM,EAASrM,IAE7BuK,MAAM,OACNrE,QAASmG,EAASf,eAAiB,OAAS,UAC5CkB,cAAe9D,IAAY2D,EAASrM,IAAK8I,EACzC1G,UAAWF,EAAQ+I,SANrB,SAQGoB,EAASpM,OACR,eAACwM,GAAA,EAAD,CACEC,OAAQhE,IAAY2D,EAASrM,GAC7B2M,UAAWjE,IAAY2D,EAASrM,GAAK8I,EAAQ,MAC7C7G,SAvCS2K,EAuCkBP,EAASrM,GAvCN,SAC9CM,GAEAoL,EAAcpL,EAAOsM,KAiCP,UAKGN,EAAI,GAAK,cAACO,GAAD,IACTR,EAASpM,UAbToM,EAASrM,KAJbqM,EAASrM,IAzBE,IAAC4M,SAsD7B,IAAMC,GAAaC,cAAe,kBAChC,cAAC,KAAD,CAAmB/B,SAAS,QAAQ7I,QAAS8I,UAGzCc,GAAeiB,cACnB,YAAkD,IAA/C3G,EAA8C,EAA9CA,SACD,OAAO,cAAC4G,GAAA,EAAD,UAAY5G,OAIjBmG,GAAeU,cACnB,YAA4C,IAAzC1M,EAAwC,EAAxCA,MACD,OAAO,mCAAGA,OCjHR2M,GAAc7L,aAAW,SAACC,GAAD,MAAY,CACzC6L,MAAO,CACL,UAAW,CACTC,OAAQ,UACR3L,gBAAgB,GAAD,OAAKH,EAAMI,QAAQI,QAAQ,KAA3B,gBAGnBuL,MAAO,CACLnH,QAAS5E,EAAMoD,QAAQ,EAAG,GAC1B4I,eAAgB,WAElBC,UAAW,CACTC,UAAW,KAEbC,YAAa,CACXvC,WAAY5J,EAAMI,QAAQI,QAAQ,SAoBvB,SAAS4L,GAAT,GAcY,IAbzB1N,EAawB,EAbxBA,GACAoL,EAYwB,EAZxBA,QACAtD,EAWwB,EAXxBA,KAWwB,IAVxBgB,MAAO6E,OAUiB,MAVR,MAUQ,EATfC,EASe,EATxBlF,QASwB,IARxBmF,gBAQwB,MARbC,GAQa,EAPxBC,EAOwB,EAPxBA,SACAC,EAMwB,EANxBA,gBAMwB,IALxBC,sBAKwB,MALP1F,GAKO,EAJxB2F,EAIwB,EAJxBA,YACAC,EAGwB,EAHxBA,WACAjC,EAEwB,EAFxBA,aACAkC,EACwB,EADxBA,YAEMlM,EAAUgL,KADQ,EAEElK,IAAM2I,SAAgBgC,GAFxB,mBAEjB7E,EAFiB,KAEVuF,EAFU,OAGMrL,IAAM2I,SAASiC,GAHrB,mBAGjBlF,EAHiB,KAGR4F,EAHQ,KAiBlBC,EAAgBnD,EAAQoD,QAAO,SAACnD,GAAD,MAAkB,SAAXA,EAAEzD,QAAiB4C,OAAS,EAExE,OACE,cAACiE,EAAA,EAAD,CAAgBrM,UAAWF,EAAQqL,UAAWvN,GAAIA,EAAlD,SACE,eAAC0O,EAAA,EAAD,CACEC,cAAY,EACZC,kBAAgB,aAChBzN,KAAK,SACL2D,aAAW,iBACX1C,UAAWF,EAAQmL,MALrB,UAOE,cAAC,GAAD,CACEvE,MAAOA,EACPJ,QAASA,EACTgD,cA1BkB,SACxBpL,EACAsM,GAEA,IACMiC,EADQnG,IAAYkE,GAAsB,QAAV9D,EACb,OAAS,MAClCuF,EAASQ,GACTP,EAAW1B,GAEXsB,GAAeA,EAAYW,EAAUjC,IAkB/BxB,QAASA,EACTc,aAAcA,IAEhB,cAAC4C,EAAA,EAAD,UACG9F,GAAWlB,EAAMe,GAAcC,EAAOJ,EAASuF,IAAiBpI,KAC/D,SAACkJ,EAAK1F,GACJ,IAAMpH,EAAU8L,EAAW,kBAAMA,EAASgB,SAAY3K,EACtD,OACE,eAAC,IAAM4K,SAAP,WACE,cAAC5C,EAAA,EAAD,CACEpM,GAAE,aAAQqJ,EAAQ,GAClBnH,QAAS,CAAEiL,MAAOjL,EAAQiL,OAC1BA,MACE8B,QAAQlB,MACPK,GAAcA,EAAYW,MAC1BR,EAEHtM,QAAS,SAACiN,GACRA,EAAEC,mBAEAlN,GACCsM,GACAH,IAAcA,EAAYW,IAE3B9M,KAGJG,UACE+L,GAAcA,EAAWY,GACrB7M,EAAQuL,iBACRrJ,EArBR,SAwBGgH,EAAQvF,KAAI,SAACwF,GAAD,OACX,cAACwC,EAAD,CACExE,MAAOA,EAAQ,EAEf0F,IAAKA,EACLvF,OAAQ6B,EACR9K,MAAOwO,EAAI1D,EAAE3B,KACbD,WAAYxH,GAJPoJ,EAAE3B,UAQZsE,GACC,cAACA,EAAD,CAAiB3E,MAAOA,EAAO0F,IAAKA,MArCnB1F,gB","file":"static/js/main.f465702f.chunk.js","sourcesContent":["import { TextField } from '@material-ui/core';\nimport { Autocomplete as MUIAutocomplete } from '@material-ui/lab';\nimport React, { ChangeEvent } from 'react';\n\nexport interface Props {\n  id: string;\n  label: string;\n  values: string[];\n  onChange: (id: string, value: string) => void;\n  selected: string | undefined;\n}\n\nexport type DropdownItem = {\n  label: string;\n  value: string;\n};\n\nexport default function Autocomplete({\n  id,\n  label,\n  values,\n  onChange,\n  selected,\n}: Props): JSX.Element {\n  const onChangeHandler = (event: ChangeEvent<any>, value: string | null) => {\n    if (event) {\n      if (value) {\n        onChange(id, value);\n      } else {\n        onChange(id, '');\n      }\n    }\n  };\n\n  return (\n    <MUIAutocomplete\n      id={id}\n      options={values}\n      getOptionLabel={(option) => (option ? option : '')}\n      onChange={onChangeHandler}\n      onInputChange={onChangeHandler}\n      inputValue={selected}\n      freeSolo={true}\n      forcePopupIcon={true}\n      renderInput={(params) => (\n        <TextField {...params} label={label} variant='outlined' size='small' />\n      )}\n    />\n  );\n}\n","import { Chip } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cancel: {\n      backgroundColor: theme.palette.common.white,\n      borderColor: theme.palette.neutral[400],\n      borderWidth: 1,\n    },\n  })\n);\n\nexport interface Props {\n  onClick: () => void;\n  label?: string;\n}\n\nexport default function CancelButton({ onClick, label }: Props): JSX.Element {\n  const classes = useStyles();\n  return (\n    <Chip\n      id=\"cancel\"\n      className={classes.cancel}\n      label={label ?? \"Cancel\"}\n      clickable\n      onClick={onClick}\n      variant=\"outlined\"\n    />\n  );\n}\n","import { Checkbox as MUICheckbox, FormControlLabel } from '@material-ui/core';\nimport React from 'react';\n\nexport interface Props {\n  id: string;\n  name: string;\n  label: React.ReactNode;\n  value?: boolean | null;\n  onChange: (id: string, value: boolean) => void;\n  disabled?: boolean;\n}\n\nexport default function Checkbox(props: Props): JSX.Element {\n  const onChange = (\n    event: React.ChangeEvent<Record<string, never>>,\n    checked: boolean\n  ) => {\n    props.onChange(props.id, checked);\n  };\n\n  return (\n    <FormControlLabel\n      id={props.id}\n      onChange={onChange}\n      label={props.label}\n      disabled={props.disabled}\n      control={\n        <MUICheckbox\n          id={'check-' + props.id}\n          color='primary'\n          checked={props.value ?? false}\n        />\n      }\n    />\n  );\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\nimport moment from 'moment';\nimport 'moment/min/locales';\nimport React, { KeyboardEventHandler } from 'react';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      margin: 0,\n    },\n  })\n);\n\nexport interface Props {\n  id: string;\n  label: React.ReactNode;\n  value?: string | null;\n  onChange: (id: string, value?: string) => void;\n  'aria-label': string;\n  onKeyPress?: KeyboardEventHandler;\n  maxDate?: string;\n  error?: boolean;\n  helperText?: string;\n  disabled?: boolean;\n}\n\nexport default function DatePicker(props: Props): JSX.Element {\n  const classes = useStyles();\n  const onDateChange = (date: MaterialUiPickersDate) => {\n    if (date && date.isValid()) {\n      props.onChange(props.id, date?.toISOString());\n    } else {\n      props.onChange(props.id, date?.toString());\n    }\n  };\n\n  React.useEffect(() => {\n    moment.locale([window.navigator.language, 'en']);\n  }, [window.navigator.language]);\n\n  return (\n    <KeyboardDatePicker\n      id={props.id}\n      value={props.value ?? null}\n      onChange={onDateChange}\n      label={props.label}\n      KeyboardButtonProps={{\n        'aria-label': props['aria-label'],\n      }}\n      disableToolbar\n      variant='inline'\n      inputVariant='outlined'\n      format={moment.localeData().longDateFormat('L')}\n      margin='normal'\n      size='small'\n      fullWidth={true}\n      className={classes.root}\n      onKeyPress={props.onKeyPress}\n      maxDate={props.maxDate ?? undefined}\n      error={props.error}\n      helperText={props.helperText}\n      disabled={props.disabled}\n    />\n  );\n}\n","import { IconButton } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.neutral[600],\n    },\n  })\n);\n\nexport interface Props {\n  onClick: () => void;\n}\n\nexport default function DialogCloseButton({ onClick }: Props): JSX.Element {\n  const classes = useStyles();\n  return (\n    <IconButton\n      aria-label='close'\n      className={classes.closeButton}\n      onClick={onClick}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n}\n","import { Box, Divider } from '@material-ui/core';\nimport React from 'react';\n\nexport interface Props {\n  mt?: number;\n}\nexport default function Divisor({ mt = 3 }: Props): JSX.Element {\n  return (\n    <>\n      <Box mt={mt} />\n      <Divider light />\n      <Box mt={mt} />\n    </>\n  );\n}\n","import {\n  createStyles,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\nimport React from 'react';\n\nexport interface Props {\n  id: string;\n  label: string;\n  values?: DropdownItem[];\n  onChange: (id: string, value: string) => void;\n  selected: string | undefined;\n  disabled?: boolean;\n}\nconst useStyles = makeStyles(() =>\n  createStyles({\n    formControl: {\n      width: '100%',\n    },\n  })\n);\n\nexport type DropdownItem = {\n  label: string;\n  value: string;\n};\n\nexport default function Dropdown({\n  id,\n  label,\n  values,\n  onChange,\n  selected,\n  disabled,\n}: Props): JSX.Element {\n  const onChangeH = (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    _child: React.ReactNode\n  ) => {\n    onChange(id, event.target.value as string);\n  };\n  const classes = useStyles();\n  return (\n    <FormControl\n      variant='outlined'\n      className={classes.formControl}\n      size='small'\n      disabled={disabled}\n    >\n      <InputLabel id={`${id}-outlined-label`}>{label}</InputLabel>\n      <Select\n        labelId={`${id}-outlined-label`}\n        id={id}\n        label={label}\n        onChange={onChangeH}\n        value={selected}\n      >\n        {values?.map(({ label, value }) => (\n          <MenuItem id={value} key={value} value={value}>\n            {label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import { Box, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    note: {\n      borderRadius: 8,\n      backgroundColor: theme.palette.neutral[200],\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nexport interface Props {\n  children: string;\n}\n\nexport default function Note({ children }: Props): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.note}>\n      <Typography component='p'>{children}</Typography>\n    </Box>\n  );\n}\n","import { FormControlLabel, Radio } from '@material-ui/core';\nimport React from 'react';\n\nexport interface Props {\n  id: string;\n  name: string;\n  label: React.ReactNode;\n  value?: boolean | null;\n  onChange: (id: string, value: boolean) => void;\n}\n\nexport default function RadioButton(props: Props): JSX.Element {\n  const onChange = (\n    event: React.ChangeEvent<Record<string, never>>,\n    checked: boolean\n  ) => {\n    props.onChange(props.id, checked);\n  };\n\n  return (\n    <FormControlLabel\n      id={props.id}\n      onChange={onChange}\n      label={props.label}\n      control={\n        <Radio\n          id={'radio-' + props.id}\n          color='primary'\n          checked={props.value ?? false}\n        />\n      }\n    />\n  );\n}\n","import { Box, IconButton, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport InfoIcon from '@material-ui/icons/Info';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    bold: {\n      fontWeight: theme.typography.fontWeightBold,\n      whiteSpace: 'pre-line',\n    },\n    summaryDefault: {\n      position: 'relative',\n      borderRadius: 8,\n      backgroundColor: theme.palette.neutral[200],\n      padding: theme.spacing(2),\n    },\n    summaryAvailable: {\n      borderRadius: 8,\n      backgroundColor: theme.palette.neutral[700],\n      padding: theme.spacing(2),\n      color: theme.palette.common.white,\n    },\n    summaryZero: {\n      borderRadius: 8,\n      backgroundColor: theme.palette.state[5],\n      padding: theme.spacing(2),\n      color: theme.palette.common.white,\n    },\n    full: {\n      borderRadius: 8,\n      backgroundColor: theme.palette.neutral[200],\n      padding: theme.spacing(2),\n      height: '100%',\n      boxSizing: 'border-box',\n    },\n    infoIcon: {\n      position: 'absolute',\n      right: theme.spacing(2),\n    },\n  })\n);\n\nexport interface Props {\n  id?: string;\n  title: string;\n  value: number | string;\n  variant?: 'default' | 'available' | 'zero' | 'full';\n  icon?: boolean;\n  onIconClick?: () => void;\n}\n\nexport default function SummaryBox({\n  title,\n  value,\n  variant = 'default',\n  id,\n  icon,\n  onIconClick,\n}: Props): JSX.Element {\n  const classes = useStyles();\n\n  const style =\n    variant === 'default'\n      ? classes.summaryDefault\n      : variant === 'available'\n      ? classes.summaryAvailable\n      : variant === 'full'\n      ? classes.full\n      : classes.summaryZero;\n\n  return (\n    <Box className={style} id={id}>\n      {icon && (\n        <IconButton className={classes.infoIcon} onClick={onIconClick}>\n          <InfoIcon />\n        </IconButton>\n      )}\n      <Typography component='p'>{title}</Typography>\n      <Typography component='p' variant='h6' className={classes.bold}>\n        {value}\n      </Typography>\n    </Box>\n  );\n}\n","import { TextField as MUITextField } from '@material-ui/core';\nimport React from 'react';\nimport { Props } from './TextField';\n\nexport default function TextArea(props: Props): JSX.Element {\n  const onChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    props.onChange(props.id, event.target.value);\n  };\n\n  return (\n    <MUITextField\n      id={props.id}\n      value={props.value ?? ''}\n      onChange={onChange}\n      type={props.type}\n      label={props.label}\n      multiline\n      rows={4}\n      variant='outlined'\n      size='small'\n      fullWidth={true}\n      placeholder={props.placeholder}\n    />\n  );\n}\n","import {\n  createStyles,\n  makeStyles,\n  TextField as MUITextField,\n} from '@material-ui/core';\nimport React, { KeyboardEventHandler } from 'react';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    adornedEnd: {\n      paddingRight: 0,\n    },\n  })\n);\n\nexport interface Props {\n  id: string;\n  value: unknown | null;\n  onChange: (id: string, value: unknown) => void;\n  type?: React.InputHTMLAttributes<unknown>['type'];\n  label: React.ReactNode;\n  disabled?: boolean;\n  endAdornment?: JSX.Element;\n  onKeyPress?: KeyboardEventHandler;\n  min?: number;\n  error?: boolean;\n  helperText?: string;\n  placeholder?: string;\n  required?: boolean;\n}\n\nexport default function TextField(props: Props): JSX.Element {\n  const classes = useStyles();\n\n  const onChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    props.onChange(props.id, event.target.value);\n  };\n\n  return (\n    <MUITextField\n      id={props.id}\n      value={props.value ?? ''}\n      onChange={onChange}\n      type={props.type}\n      label={props.label}\n      variant='outlined'\n      size='small'\n      fullWidth={true}\n      disabled={props.disabled}\n      onKeyPress={props.onKeyPress}\n      InputProps={{\n        endAdornment: props.endAdornment,\n        classes: {\n          adornedEnd: classes.adornedEnd,\n        },\n        inputProps: {\n          min: props.min,\n        },\n      }}\n      error={props.error}\n      helperText={props.helperText}\n      required={props.required}\n    />\n  );\n}\n","export function descendingComparator<T>(\n  a: T,\n  b: T,\n  orderBy: keyof T\n): 1 | -1 | 0 {\n  const bValue = b[orderBy] ?? '';\n  const aValue = a[orderBy] ?? '';\n  if (bValue < aValue) {\n    return -1;\n  }\n  if (bValue > aValue) {\n    return 1;\n  }\n  return 0;\n}\n\nexport type Order = 'asc' | 'desc';\n\nexport function getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n  sorting: (a: any, b: any, orderBy: any) => 1 | -1 | 0\n): (\n  a: { [key in Key]?: string | number | [] },\n  b: { [key in Key]?: string | number | [] }\n) => number {\n  return order === 'desc'\n    ? (a, b) => sorting(a, b, orderBy)\n    : (a, b) => -sorting(a, b, orderBy);\n}\n\nexport function stableSort<T>(\n  array: T[],\n  comparator: (a: T, b: T) => number\n): T[] {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n","import {\n  Box,\n  createStyles,\n  Link,\n  makeStyles,\n  TableCell,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport NotesIcon from \"@material-ui/icons/Notes\";\nimport React from \"react\";\nimport { RendererProps } from \"./types\";\n\nexport type TableRowType = Record<string, any>;\n\nexport default function CellRenderer(\n  props: RendererProps<TableRowType>\n): JSX.Element {\n  const { column, value, onRowClick, index } = props;\n  const id = `row${index}-${column.key}`;\n  if (column.type === \"date\" && typeof value === \"string\" && value) {\n    return <CellDateRenderer id={id} value={value} />;\n  } else if (column.type === \"notes\" && value && typeof value === \"string\") {\n    return <CellNotesRenderer id={id} value={value} />;\n  } else if (column.type === \"boolean\") {\n    return <CellBooleanRenderer id={id} value={value} />;\n  } else if (column.type === \"edit\") {\n    return <CellEditRenderer id={id} onRowClick={onRowClick} />;\n  }\n  return <CellTextRenderer id={id} value={value} />;\n}\n\nexport function CellDateRenderer({\n  id,\n  value,\n}: {\n  id: string;\n  value: string;\n}): JSX.Element {\n  const date = new Date(value).toLocaleDateString(\"en-US\", {\n    day: \"2-digit\",\n    month: \"2-digit\",\n    year: \"numeric\",\n    timeZone: \"UTC\",\n  });\n\n  return (\n    <TableCell id={id} align=\"left\">\n      <Typography component=\"p\" variant=\"body1\">\n        {date}\n      </Typography>\n    </TableCell>\n  );\n}\n\nexport function CellTextRenderer({\n  id,\n  value,\n}: {\n  id: string;\n  value?: string | number | any[];\n}): JSX.Element {\n  return (\n    <TableCell id={id} align=\"left\">\n      <Typography component=\"p\" variant=\"body1\">\n        {value}\n      </Typography>\n    </TableCell>\n  );\n}\n\nexport function CellBooleanRenderer({\n  id,\n  value,\n}: {\n  id: string;\n  value?: string | number | any[];\n}): JSX.Element {\n  return (\n    <TableCell id={id} align=\"left\">\n      <Typography component=\"p\" variant=\"body1\">\n        {value === \"true\" ? \"YES\" : \"NO\"}\n      </Typography>\n    </TableCell>\n  );\n}\n\nexport function CellNotesRenderer({\n  id,\n  value,\n}: {\n  id: string;\n  value?: string;\n}): JSX.Element {\n  return (\n    <TableCell id={id} align=\"left\">\n      <Typography id={id} component=\"p\" variant=\"body1\">\n        {value && value.length > 0 ? <NotesIcon /> : \"\"}\n      </Typography>\n    </TableCell>\n  );\n}\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    editIcon: {\n      marginLeft: theme.spacing(1),\n    },\n  })\n);\n\nexport function CellEditRenderer({\n  id,\n  onRowClick,\n}: {\n  id: string;\n  onRowClick?: () => void;\n}): JSX.Element {\n  const classes = useStyles();\n  return (\n    <TableCell id={id} align=\"left\">\n      <Link\n        id={`${id}-button`}\n        href=\"#\"\n        onClick={(event: React.SyntheticEvent) => {\n          event.preventDefault();\n          onRowClick && onRowClick();\n        }}\n      >\n        <Box display=\"flex\">\n          <Typography component=\"p\" variant=\"body1\">\n            Edit\n          </Typography>\n          <EditIcon fontSize=\"small\" className={classes.editIcon} />\n        </Box>\n      </Link>\n    </TableCell>\n  );\n}\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport React from \"react\";\nimport {\n  SortableContainer,\n  SortableElement,\n  SortableHandle,\n} from \"react-sortable-hoc\";\nimport { Order } from \"./sort\";\nimport { TableColumnType } from \"./types\";\n\nconst dragIconStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: -20,\n    color: theme.palette.common.white,\n    \"&:hover\": {\n      color: theme.palette.neutral[600],\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    headcell: {\n      background: theme.palette.common.white,\n    },\n  })\n);\n\ninterface Props {\n  onRequestSort: (event: React.MouseEvent<unknown>, property: string) => void;\n  order: Order;\n  orderBy?: string;\n  columns: TableColumnType[];\n  onReorderEnd?: ({ oldIndex, newIndex }: any) => void;\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: string;\n  label: string;\n}\n\nfunction columnsToHeadCells(columns: TableColumnType[]): HeadCell[] {\n  return columns.map((c) => ({\n    id: c.key,\n    disablePadding: false,\n    label: c.name.toUpperCase(),\n  }));\n}\n\nexport default function EnhancedTableHead(props: Props): JSX.Element {\n  const classes = useStyles();\n  const { order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property: string) => (\n    event: React.MouseEvent<unknown>\n  ) => {\n    onRequestSort(event, property);\n  };\n\n  const [headCells, setHeadCells] = React.useState<HeadCell[]>(\n    columnsToHeadCells(props.columns)\n  );\n  React.useEffect(() => {\n    setHeadCells(columnsToHeadCells(props.columns));\n  }, [props.columns]);\n\n  return (\n    <SortableHead\n      lockAxis=\"x\"\n      axis=\"x\"\n      onSortEnd={props.onReorderEnd}\n      useDragHandle\n    >\n      <TableRow id=\"table-header\">\n        {headCells.map((headCell, i) => (\n          <SortableCell\n            disabled={!props.onReorderEnd}\n            index={i}\n            key={headCell.id}\n            value={\n              <TableCell\n                id={`table-header-${headCell.id}`}\n                key={headCell.id}\n                align=\"left\"\n                padding={headCell.disablePadding ? \"none\" : \"default\"}\n                sortDirection={orderBy === headCell.id ? order : false}\n                className={classes.headcell}\n              >\n                {headCell.label && (\n                  <TableSortLabel\n                    active={orderBy === headCell.id}\n                    direction={orderBy === headCell.id ? order : \"asc\"}\n                    onClick={createSortHandler(headCell.id)}\n                  >\n                    {i > 0 && <DragHandle />}\n                    {headCell.label}\n                  </TableSortLabel>\n                )}\n              </TableCell>\n            }\n          />\n        ))}\n      </TableRow>\n    </SortableHead>\n  );\n}\n\nconst DragHandle = SortableHandle(() => (\n  <DragIndicatorIcon fontSize=\"small\" classes={dragIconStyles()} />\n));\n\nconst SortableHead = SortableContainer(\n  ({ children }: { children: React.ReactNode }) => {\n    return <TableHead>{children}</TableHead>;\n  }\n);\n\nconst SortableCell = SortableElement(\n  ({ value }: { value: React.ReactNode }) => {\n    return <>{value}</>;\n  }\n);\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React from \"react\";\nimport { descendingComparator, getComparator, Order, stableSort } from \"./sort\";\nimport TableCellRenderer from \"./TableCellRenderer\";\nimport TableHeader from \"./TableHeader\";\nimport { DetailsRendererProps, RendererProps, TableColumnType } from \"./types\";\n\nconst tableStyles = makeStyles((theme) => ({\n  hover: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n      backgroundColor: `${theme.palette.neutral[100]}!important`,\n    },\n  },\n  table: {\n    padding: theme.spacing(0, 3),\n    borderCollapse: \"initial\",\n  },\n  container: {\n    maxHeight: 850,\n  },\n  inactiveRow: {\n    background: theme.palette.neutral[50],\n  },\n}));\n\nexport interface Props<T> {\n  id?: string;\n  orderBy: string;\n  order?: Order;\n  columns: TableColumnType[];\n  rows: T[];\n  Renderer?: (props: RendererProps<T>) => JSX.Element;\n  onSelect?: (value: T) => void;\n  DetailsRenderer?: (props: DetailsRendererProps) => JSX.Element;\n  sortComparator?: (a: T, b: T, orderBy: keyof T) => 1 | -1 | 0;\n  sortHandler?: (order: Order, orderBy: string) => void;\n  isInactive?: (row: T) => boolean;\n  onReorderEnd?: ({ oldIndex, newIndex }: any) => void;\n  isClickable?: (row: T) => boolean;\n}\n\nexport default function EnhancedTable<T>({\n  id,\n  columns,\n  rows,\n  order: _order = \"asc\",\n  orderBy: _orderBy,\n  Renderer = TableCellRenderer,\n  onSelect,\n  DetailsRenderer,\n  sortComparator = descendingComparator,\n  sortHandler,\n  isInactive,\n  onReorderEnd,\n  isClickable,\n}: Props<T>): JSX.Element {\n  const classes = tableStyles();\n  const [order, setOrder] = React.useState<Order>(_order);\n  const [orderBy, setOrderBy] = React.useState(_orderBy);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: string\n  ) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    const newOrder = isAsc ? \"desc\" : \"asc\";\n    setOrder(newOrder);\n    setOrderBy(property);\n\n    sortHandler && sortHandler(newOrder, property);\n  };\n\n  const hasEditColumn = columns.filter((c) => c.type === \"edit\").length > 0;\n\n  return (\n    <TableContainer className={classes.container} id={id}>\n      <Table\n        stickyHeader\n        aria-labelledby=\"tableTitle\"\n        size=\"medium\"\n        aria-label=\"enhanced table\"\n        className={classes.table}\n      >\n        <TableHeader\n          order={order}\n          orderBy={orderBy}\n          onRequestSort={handleRequestSort}\n          columns={columns}\n          onReorderEnd={onReorderEnd}\n        />\n        <TableBody>\n          {stableSort(rows, getComparator(order, orderBy, sortComparator)).map(\n            (row, index) => {\n              const onClick = onSelect ? () => onSelect(row as T) : undefined;\n              return (\n                <React.Fragment key={index}>\n                  <TableRow\n                    id={`row${index + 1}`}\n                    classes={{ hover: classes.hover }}\n                    hover={\n                      Boolean(onSelect) &&\n                      (isClickable ? isClickable(row as T) : true) &&\n                      !hasEditColumn\n                    }\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      if (\n                        onClick &&\n                        !hasEditColumn &&\n                        (isClickable ? isClickable(row as T) : true)\n                      ) {\n                        onClick();\n                      }\n                    }}\n                    className={\n                      isInactive && isInactive(row as T)\n                        ? classes.inactiveRow\n                        : undefined\n                    }\n                  >\n                    {columns.map((c) => (\n                      <Renderer\n                        index={index + 1}\n                        key={c.key}\n                        row={row as T}\n                        column={c}\n                        value={row[c.key]}\n                        onRowClick={onClick}\n                      />\n                    ))}\n                  </TableRow>\n                  {DetailsRenderer && (\n                    <DetailsRenderer index={index} row={row} />\n                  )}\n                </React.Fragment>\n              );\n            }\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport function tableSort<T>(\n  ignore: boolean,\n  array: T[],\n  comparator: (a: T, b: T) => number\n): T[] {\n  if (ignore) {\n    return array;\n  }\n  return stableSort(array, comparator);\n}\n"],"sourceRoot":""}